# The number of milliseconds of each tick
# ZooKeeper 中很多配置项(如心跳时间、连接超时时间等)都要用到的时间单位，这里配置为 2000 毫秒，即2秒
tickTime=2000
# The number of ticks that the initial
# synchronization phase can take
# 当非 leader 节点(即 follower 和 observer)启动时，需要先从 leader 那里复制数据，以保证所有
# ZooKeeper 节点数据都是同步的。这个选项设置非 leader 节点从启动到完成同步的超时时长，
# 它以 tickTime 为时间单位
# 如果 initLimit 的值为10, 则超时时长为 10*2 = 20s
# 一般来说，ZooKeeper保存的都是协调数据，数据量并不大，所以多数时候可以忽略这个参数，如果
# 待同步数据真的很大，可以考虑增加这个超时时间
initLimit=10
# The number of ticks that can pass between
# sending a request and getting an acknowledgement
# follower 和 leader 之间数据延迟的最大时间长度。例如，有个节点的更新操作缓慢，它的数据
# 已经严重落后于 leader，ZooKeeper 就会将它从 ZooKeeper 集群中踢出去。ZooKeeper 使用时间
# 来度量 follower 和 leader 之间数据的延迟，这个选项的值依赖于 tickTime
# 例如 tickTime=2000,syncLimit=2 表示 follower 比 leader 延迟了4秒。
syncLimit=5
# the directory where the snapshot is stored.
# do not use /tmp for storage, /tmp here is just
# example sakes.
# ZooKeeper 实例的数据目录
dataDir=/usr/local/zookeeper/data
# the port at which the clients will connect
# ZooKeeper 向外提供服务的端口
clientPort=2181
# the maximum number of client connections.
# increase this if you need to handle more clients
#maxClientCnxns=60
#
# Be sure to read the maintenance section of the
# administrator guide before turning on autopurge.
#
# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance
#
# The number of snapshots to retain in dataDir
#autopurge.snapRetainCount=3
# Purge task interval in hours
# Set to "0" to disable auto purge feature
#autopurge.purgeInterval=1

## Metrics Providers
#
# https://prometheus.io Metrics Exporter
#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider
#metricsProvider.httpPort=7000
#metricsProvider.exportJvmInfo=true

# server.X=[hostname]:port_A:port_B：该选项用来指定ZooKeeper集群中的服务器节点。其中：
# - X：整数。是ZooKeeper中服务器的一个简单标识。这个数值需要和 dataDir 下的 myid 文件内容一致。
#   在启动ZooKeeper集群中的每个实例时，需要读取数据目录中的 myid 文件，并将该文件中的数值和
#   配置文件中的 server.X 做匹配，匹配到哪个就表示是哪个 ZooKeeper 服务器节点。
# - hostname：ZooKeeper服务器节点的地址。
# - port_A：这是第一个端口，用于Follower和Leader之间的数据同步和其它通信。
# - port_B：这是第二个端口，用于Leader选举过程中投票通信。
server.1=10.250.21.11:2888:3888
server.2=10.250.21.12:2888:3888
server.3=10.250.21.13:2888:3888
