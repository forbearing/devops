一：Kafka
    * kafka 在设计之初的时候 开发人员们在除了消息中间件以外，还想吧kafka设计为一个能够存储
      数据的系统，有点像常见的非关系型数据库，比如说 NoSql 等。除此之外  还希望 kafka 能
      支持持续变化，不断增长的数据流,  可以发布 和订阅数据流，还可以对于这些数据进行保存
    * 也就是说 kafka 的本质是一个数据存储平台、流平台、只是他在做消息发布和消息消费的时候
      我们可以把他当做消息中间件来用。
    * 而且 kafka 在设计之初就是采用分布式架构设计的，基于集群的方式工作，且可以自由伸缩，
      所以 kafka 构建集群非常简单



二：基本概念
    Broker:         和AMQP里协议的概念一样，就是消息中间件所在的服务器
    Topic:          每条发布到 Kafka 集群的消息都有一个类别，这个类别被称为 Topic。（物理上不同 Topic
                    的消息分开存储，逻辑上一个 Topic 的消息虽然保存于一个或多个 broker 上但用户只需
                    指定消息的 Topic 即可生产或消费数据而不必关心数据存于何处）
    Partition:      Partition 是物理上的概念，体现在磁盘上面，每个 Topic 包含一个或多个 Partition.
    Producer :      负责发布消息到 Kafka broker
    Consumer :      消息消费者，向 Kafka broker 读取消息的客户端。
    Consumer Group: 每个 Consumer 属于一个特定的 Consumer Group（可为每个 Consumer 指定 group name，
                    若不指定 group name 则属于默认的 group）。
    offset:         是 kafka 用来确定消息是否被消费过的标识，在 kafka 内部体现就是一个递增的数字

    kafka 消息发送的时候，考虑到性能可以采用打包方式发送，也就是说传统的消息是一条一条发送，
    现在可以先把需要发送的消息缓存在客户端，等到达一定数值时再一起打包发送，而且还可以对发送
    的数据进行压缩处理，减少在数据传输时的开销



三：Kafka 优缺点
    优点
        1:基于磁盘的数据存储
        2:高伸缩性
        3:高性能
        4:应用场景：收集指标和日志、提交日志、流处理
    缺点
        1:运维难度大
        2:偶尔有数据混乱的情况
        3:对 zookeeper 强依赖
        4:多副本模式下对带宽有一定要求

